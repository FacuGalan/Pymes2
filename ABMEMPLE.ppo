#line 203 "c:\harb16\include\hbclass.ch"
DECLARE HBClass  New( cName AS STRING, OPTIONAL SuperParams ) AS CLASS HBClass  Create() AS OBJECT  Instance() AS OBJECT  AddClsMethod( cName AS STRING, @MethodName(), nScope AS NUMERIC, n2 AS NUMERIC, n3 AS NUMERIC )  AddMultiClsData( cType AS STRING, uVal, nScope AS NUMERIC, aDatas AS ARRAY OF STRING )  AddMultiData( cType AS STRING, uVal, nScope AS NUMERIC, aDatas AS ARRAY OF STRING, x AS LOGICAL, lPer AS LOGICAL )  AddMethod( cName AS STRING, @MethodName(), nScope AS NUMERIC )  AddInLine( cName AS STRING, bBlock AS CODEBLOCK, nScope AS NUMERIC )  AddVirtual( cName AS STRING )
#line 91 "C:\FWH16\INCLUDE\Fivewin.ch"
         EXTERNAL FW_GT
















extern errorsys











































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































static aFwStack      := {}
#line 10 "ABMEMPLE.prg"
MEMVAR oApp
STATIC oQryBrw,oWnd1, oBrw, oDlg, cVentana
PROCEDURE ABMEMPL(cPermisos)
LOCAL oBar, hHand
cVentana := PROCNAME()
IF ASCAN(oApp:aVentanas,cVentana) > 0
   hHand := ASCAN(oApp:aVentanas,cVentana)
   oApp:oWnd:Select(hHand)
   oApp:oWnd:oWndClient:aWnd[hHand]:Restore()
   RETURN
ENDIF
AADD(oApp:aVentanas,cVentana)

oQryBrw:= oApp:oServer:Query("SELECT * FROM ge_"+oApp:cId+"emp_empleado ORDER BY nombre")


  oWnd1 := TMdiChild():New( 05, 05, 50, 50, "A/B/M de Empleados",,, oApp:oWnd, oApp:oIco, .F.,,,,, .F., .F.,,, !.F., !.F., !.F., !.T.,, )
         oBar := TBar():New( oWnd1, 60, 60, .F.,,, .F., .T., .F.,,, ,,, .F.,, .F. )



         TBtnBmp():NewBar( "ALTA",,,,, {|This|(Formu( .T. ),oBrw:Refresh())}, .F., oBar, .F., {||("A"$cPermisos)}, "Agregar Registro", .F.,, "(Formu( .T. ),oBrw:Refresh())",, "Alta",,,,,, Upper("TOP"),,, .F. )



         TBtnBmp():NewBar( "MODI",,,,, {|This|(Formu( .F. ),oBrw:Refresh())}, .F., oBar, .F., {||(oQryBrw:RecCount()>0 .AND. "M"$cPermisos)}, "Modificar Registro", .F.,, "(Formu( .F. ),oBrw:Refresh())",, "Modifica",,,,,, Upper("TOP"),,, .F. )



         TBtnBmp():NewBar( "BAJA",,,,, {|This|(Baja( ),oBrw:Refresh())}, .F., oBar, .F., {||(oQryBrw:RecCount()>0 .AND. "B"$cPermisos)}, "Eliminar Registro", .F.,, "(Baja( ),oBrw:Refresh())",, "Baja",,,,,, Upper("TOP"),,, .F. )



         TBtnBmp():NewBar( "EXCE",,,,, {|This|oBrw:ToExcel()}, .F., oBar, .F., {||(oQryBrw:RecCount()>0 .AND. "E"$cPermisos)}, "Exportar a Excel", .F.,, "oBrw:ToExcel()",, "Exporta",,,,,, Upper("TOP"),,, .F. )



         TBtnBmp():NewBar( "IMPR",,,,, {|This|oBrw:Report("Reporte de Empleados",.T.,.F., { |oRep,brw| ReporteE( oRep, brw ) })}, .F., oBar, .F., {||(oQryBrw:RecCount()>0 .AND. "R"$cPermisos)}, "Imprimir Planilla", .F.,, 'oBrw:Report("Reporte de Empleados",.T.,.F., { |oRep,brw| ReporteE( oRep, brw ) })',, "Reporte",,,,,, Upper("TOP"),,, .F. )



         TBtnBmp():NewBar( "CODBAR1",,,,, {|This|Tarjeta()}, .F., oBar, .F.,, "Emitir tarjeta para fichada", .F.,, "Tarjeta()",, "Tarjeta",,,,,, Upper("TOP"),,, .F. )



         TBtnBmp():NewBar( "PAGO",,,,, {|This|Liquida()}, .F., oBar, .F., {||(oQryBrw:RecCount()>0 .AND. "AB"$cPermisos)}, "Cargar liquidación Mensual", .F.,, "Liquida()",, "Liquidación",,,,,, Upper("TOP"),,, .F. )




         TBtnBmp():NewBar( "SALE",,,,, {|This|oWnd1:End()}, .F., oBar, .F.,, "Cerrar Ventana", .F.,, "oWnd1:End()",, "Cerrar",,,,,, Upper("TOP"),,, .F. )
   oWnd1:bGotFocus := { || oDlg:SetFocus}
   oWnd1:bResized := { || Incrusta( oWnd1, oDlg, .T.) }
     oDlg = TDialog():New(,,,,, "ABMS",, .F.,,,,, oWnd1, .F.,,,,,, .F.,, "oDlg", nil, )




     oBrw := XbrowseNew( oDlg, 0, 0,,,, {"Legajo","Nombre","Inactivo"}, {60,445,60},, {|nRow,nCol,nFlags|IF("M"$cPermisos,(Formu( .F.),oBrw:Refresh()),nil)},,,,,,, .F., oQryBrw,, .F.,, .F., 111, .T., .F. ,, {"Codigo","nombre","inactivo"},,, .F., .F., .F., .F.,,,,, .F., .F., "oBrw", )
     oBrw:oSeek := TSay():ReDefine( 113, {|| ""}, oDlg,,,, .F.,, .F., .F., )
     oQryBrw:bOnChangePage := {|| oBrw:Refresh() }

     oBrw:bKeyDown := {|nKey,nFlags| Acelerador2(nKey,oBar,cPermisos)}

     oBrw:aCols[3]:bEditValue := {|| IF( oQryBrw:inactivo, .T., .F. )  }
     oBrw:aCols[3]:SetCheck(,.T.)
     PintaBrw(oBrw,3)

     oDlg:Activate( oDlg:bLClicked, oDlg:bMoved, oDlg:bPainted, .T., {|Self|(oWnd1:End())}, ! .T., {|Self|oDlg:Move(0,0)}, oDlg:bRClicked,,, )
   oWnd1:Activate(, oWnd1:bLClicked, oWnd1:bRClicked, oWnd1:bMoved, oWnd1:bResized, oWnd1:bPainted, oWnd1:bKeyDown, oWnd1:bInit := { | Self | Incrusta( oWnd1, oDlg, .T.) },,,,,,,,, {||(cerrar())},, oWnd1:bLButtonUp, .F. )
RETURN




STATIC FUNCTION Acelerador2(nKey, oBar,cPermisos)

IF nKey = 13
   IF "M"$cPermisos
      oBar:aControls[2]:Click()
      oBrw:GoLeftMost()
  ENDIF
ENDIF

RETURN NIL



STATIC FUNCTION Formu (lAlta)




LOCAL oGet := ARRAY(30), oBot := ARRAY(3), oForm, lRta := .F., aCor, base, oError, oQry, cNomSec:=SPACE(50),oQrySec:= oApp:oServer:Query("SELECT * FROM ge_"+oApp:cId+"emp_sector"), cNomCat:=SPACE(50),oQryCat:= oApp:oServer:Query("SELECT * FROM ge_"+oApp:cId+"emp_emplcat"), mfoto := ".\iconos\nofoto.jpg", aConsumo_por := {"Por precio Costo","Por precio Venta"}, manti := SPACE(20)


IF lAlta
   oQry:= oApp:oServer:Query("SELECT * FROM ge_"+oApp:cId+"emp_empleado LIMIT 0")
   base := oQry:GetBlankRow()
   base:codigo := oApp:oServer:GetAutoIncrement("ge_"+oApp:cId+"emp_empleado")
   base:sueldo:=0
   base:hor_hab_desde1:= "07:00:00"
   base:hor_hab_hasta1:= "12:00:00"
   base:hor_hab_desde2:= "13:00:00"
   base:hor_hab_hasta2:= "17:00:00"
   base:consumo_por := 2
   base:tipocontrato := "MENSUAL"+SPACE(13)
   ELSE
   oQry:= oApp:oServer:Query("SELECT * FROM ge_"+oApp:cId+"emp_empleado WHERE codigo = " + ClipValue2Sql(oQryBrw:codigo))
   base := oQry:GetRowObj()
   oQry:lAppend:= .F.
   oQrySec:GoTop()
   IF oQrySec:Seek(base:sector,1) > 0
      cNomSec := oQrySec:nombre
   ENDIF
   oQryCat:GoTop()
   IF oQryCat:Seek(base:catego,1) > 0
      cNomCat := oQryCat:nombre
   ENDIF

ENDIF




mfoto :=  IF(FILE(".\iconos\"+STRTRAN(STR(base:codigo,8)," ","0")+".jpg"), ".\iconos\"+STRTRAN(STR(base:codigo,8)," ","0")+".jpg", mfoto)

while .T.

oForm = TDialog():New( 05, 15, 38, 95, IF(lAlta,"Alta","Modificacion") + " de Empleados",,, .F.,,,,, oWnd1, .F.,, oApp:oFont,,,, .F.,, "oForm", nil, )

   TSay():New( 07, 05, {|| "Legajo:"}, oForm,,, .F., .T., .F., .T.,,, 40, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 22, 05, {|| "Nombre:"}, oForm,,, .F., .T., .F., .T.,,, 40, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 37, 05, {|| "Sector:"}, oForm,,, .F., .T., .F., .T.,,, 40, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 52, 05, {|| "Localidad:"}, oForm,,, .F., .T., .F., .T.,,, 40, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 67, 05, {|| "Direccion:"}, oForm,,, .F., .T., .F., .T.,,, 40, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 82, 05, {|| "Telefono:"}, oForm,,, .F., .T., .F., .T.,,, 40, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 97, 05, {|| "Mail:"}, oForm,,, .F., .T., .F., .T.,,, 40, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 112, 05, {|| "Sueldo:"}, oForm,,, .F., .T., .F., .T.,,, 40, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 127, 05, {|| "Categoria:"}, oForm,,, .F., .T., .F., .T.,,, 40, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 112, 105, {|| "C.U.I.L.:"}, oForm,,, .F., .T., .F., .T.,,, 30, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 112, 200, {|| "Fecha Ing.:"}, oForm,,, .F., .T., .F., .T.,,, 30, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 142, 50, {|| "HORARIO HABITUAL"}, oForm,,, .F., .T., .F., .T.,,, 50, 12, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 157, 05, {|| "Entrada:"}, oForm,,, .F., .T., .F., .T.,,, 40, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 157, 105, {|| "Salida:"}, oForm,,, .F., .T., .F., .T.,,, 30, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 172, 05, {|| "Entrada:"}, oForm,,, .F., .T., .F., .T.,,, 40, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 172, 105, {|| "Salida:"}, oForm,,, .F., .T., .F., .T.,,, 30, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 157, 175, {|| "Tipo Contratación:"}, oForm,,, .F., .T., .F., .T.,,, 40, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 187, 005, {|| "Consumo interno:"}, oForm,,, .F., .T., .F., .T.,,, 40, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 187, 175, {|| "Descuento:"}, oForm,,, .F., .T., .F., .T.,,, 30, 12, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 187, 235, {|| "Limite:"}, oForm,,, .F., .T., .F., .T.,,, 30, 12, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 202, 05, {|| "Talle Pantalon:"}, oForm,,, .F., .T., .F., .T.,,, 50, 12, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 202, 105, {|| "Talle Rem./Chomba:"}, oForm,,, .F., .T., .F., .T.,,, 50, 12, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 202, 205, {|| "Talle Campera/Buzo:"}, oForm,,, .F., .T., .F., .T.,,, 50, 12, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 217, 05, {|| "Contacto Emerg.:"}, oForm,,, .F., .T., .F., .T.,,, 50, 12, .F., .F., .F., .F., .F., .F., .F.,, )


   oGet[1] := TGet():New( 05, 50, { | u | If( PCount()==0, base:codigo, base:codigo:= u ) }, oForm,,, "99999",,,,, .F.,, .T.,, .F., {||(lAlta)}, .F., .T.,, .F., .F., .F.,, .F.,,,,,,, "oGet[1]", )
   oGet[21] := TCheckBox():New( 05, 90, "Inactivo", { | u | If( PCount()==0, base:inactivo, base:inactivo:= u ) }, oForm, 30, 12,,,,,,, .F., .T.,, .F.,, "oGet[21]" )

   oGet[2] := TGet():New( 20, 50, { | u | If( PCount()==0, base:nombre, base:nombre:= u ) }, oForm,,, "@!", {||(base:nombre<>SPACE(50))},,,, .F.,, .T.,, .F.,, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[2]", )


   oGet[3] := TGet():New( 35, 50, { | u | If( PCount()==0, base:sector, base:sector:= u ) }, oForm, 30, 12, "999", {||(Buscar(oQrySec,oForm,oGet[3],oGet[4]))},,,, .F.,, .T.,, .F.,, .F., .T.,, .F., .F.,,,,,,,, {|self| (oGet[3]:cText:= 0, Buscar(oQrySec,oForm,oGet[3],oGet[4])) }, "BUSC1", "oGet[3]",,,, )
   oGet[4] := TGet():New( 35, 85, { | u | If( PCount()==0, cNomSec, cNomSec:= u ) }, oForm, 145, 12, "@!",,,,, .F.,, .T.,, .F., {||(.F.)}, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[4]", )
   oGet[5] := TGet():New( 50, 50, { | u | If( PCount()==0, base:localidad, base:localidad:= u ) }, oForm,,, "@!",,,,, .F.,, .T.,, .F.,, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[5]", )
   oGet[6] := TGet():New( 65, 50, { | u | If( PCount()==0, base:direccion, base:direccion:= u ) }, oForm,,, "@!",,,,, .F.,, .T.,, .F.,, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[6]", )
   oGet[7] := TGet():New( 80, 50, { | u | If( PCount()==0, base:telefono, base:telefono:= u ) }, oForm,,, "@!",,,,, .F.,, .T.,, .F.,, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[7]", )
   oGet[8] := TGet():New( 95, 50, { | u | If( PCount()==0, base:mail, base:mail:= u ) }, oForm,,, "@!",,,,, .F.,, .T.,, .F.,, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[8]", )
   oGet[9] := TGet():New( 110, 50, { | u | If( PCount()==0, base:sueldo, base:sueldo:= u ) }, oForm,,, "99999999.99",,,,, .F.,, .T.,, .F.,, .F., .T.,, .F., .F., .F.,, .F.,,,,,,, "oGet[9]", )

   oGet[17] := TGet():New( 110, 140, { | u | If( PCount()==0, base:cuil, base:cuil:= u ) }, oForm, 55, 12, "99-99999999-9", {||(ValidaCuit(base:cuil))},,,, .F.,, .T.,, .F.,, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[17]", )
   oGet[23] := TGet():New( 110, 240, { | u | If( PCount()==0, base:fecing, base:fecing:= u ) }, oForm,,, "@D", {||(Antiguedad(base:fecing,oGet[24]))},,,, .F.,, .T.,, .F.,, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[23]", )
   oGet[24] := TGet():New( 125, 240, { | u | If( PCount()==0, manti, manti:= u ) }, oForm,,,,, 128,,, .F.,, .T.,, .F., {||(.F.)}, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[24]", )



   oGet[11] := TGet():New( 125, 50, { | u | If( PCount()==0, base:catego, base:catego:= u ) }, oForm, 30, 12, "999", {||(Buscar(oQryCat,oForm,oGet[11],oGet[12]))},,,, .F.,, .T.,, .F.,, .F., .T.,, .F., .F.,,,,,,,, {|self| (oGet[11]:cText:= 0, Buscar(oQryCat,oForm,oGet[11],oGet[12])) }, "BUSC1", "oGet[11]",,,, )
   oGet[12] := TGet():New( 125, 85, { | u | If( PCount()==0, cNomCat, cNomCat:= u ) }, oForm, 145, 12, "@!",,,,, .F.,, .T.,, .F., {||(.F.)}, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[12]", )

   oGet[10] := TImage():New( 15, 235, 75, 75,, mfoto, .F., oForm, { |nRow,nCol,nKeyFlags| CambiaImagen(oGet[10],@mfoto) },, .F., .T.,,, .F.,, .T.,, .F., "oGet[10]" )

   oGet[13] := TGet():New( 155, 50, { | u | If( PCount()==0, base:hor_hab_desde1, base:hor_hab_desde1:= u ) }, oForm,,, "99:99:99",,,,, .F.,, .T.,, .F.,, .T., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[13]", )
   oGet[14] := TGet():New( 155, 140, { | u | If( PCount()==0, base:hor_hab_hasta1, base:hor_hab_hasta1:= u ) }, oForm,,, "99:99:99",,,,, .F.,, .T.,, .F.,, .T., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[14]", )
   oGet[15] := TGet():New( 170, 50, { | u | If( PCount()==0, base:hor_hab_desde2, base:hor_hab_desde2:= u ) }, oForm,,, "99:99:99",,,,, .F.,, .T.,, .F.,, .T., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[15]", )
   oGet[16] := TGet():New( 170, 140, { | u | If( PCount()==0, base:hor_hab_hasta2, base:hor_hab_hasta2:= u ) }, oForm,,, "99:99:99",,,,, .F.,, .T.,, .F.,, .T., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[16]", )
   oGet[18] := TGet():New( 155, 220, { | u | If( PCount()==0, base:tipocontrato, base:tipocontrato:= u ) }, oForm,,,,,,,, .F.,, .T.,, .F.,, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[18]", )
   oGet[19] := TComboBox():New( 185, 50, { | u | If( PCount()==0, base:consumo_por, base:consumo_por:= u ) }, aConsumo_por, 100, 12, oForm,,,,,, .T.,,, .F.,, .F.,,,,,, "oGet[19]", )
   oGet[20] := TGet():New( 185, 210, { | u | If( PCount()==0, base:consumo_desc, base:consumo_desc:= u ) }, oForm,,, "999.99",,,,, .F.,, .T.,, .F., {||(base:consumo_por = 2)}, .F., .T.,, .F., .F., .F.,, .F.,,,,,,, "oGet[20]", )
   oGet[22] := TGet():New( 185, 265, { | u | If( PCount()==0, base:consumo_limite, base:consumo_limite:= u ) }, oForm,,, "9999999.99",,,,, .F.,, .T.,, .F.,, .F., .T.,, .F., .F., .F.,, .F.,,,,,,, "oGet[22]", )
   oGet[25] := TGet():New( 200, 60, { | u | If( PCount()==0, base:tallepan, base:tallepan:= u ) }, oForm,,, "@S10",,,,, .F.,, .T.,, .F.,, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[25]", )
   oGet[26] := TGet():New( 200, 160, { | u | If( PCount()==0, base:tallerem, base:tallerem:= u ) }, oForm,,, "@S10",,,,, .F.,, .T.,, .F.,, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[26]", )
   oGet[27] := TGet():New( 200, 260, { | u | If( PCount()==0, base:tallebuz, base:tallebuz:= u ) }, oForm,,, "@S10",,,,, .F.,, .T.,, .F.,, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[27]", )
   oGet[28] := TGet():New( 215, 60, { | u | If( PCount()==0, base:contacto, base:contacto:= u ) }, oForm,,,,,,,, .F.,, .T.,, .F.,, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[28]", )


   acor := AcepCanc(oForm)

   oBot[1] := TButton():New( acor[1], acor[2], "&Grabar", oForm, {|| ((lRta := .T.), oForm:End() )}, 30, 10,,, .F., .T., .F.,, .F.,,, .F., "oBot[1]", .F. )

   oBot[2] := TButton():New( acor[3], acor[4], "&Cancelar", oForm, {|| ((lRta := .F.), oForm:End() )}, 30, 10,,, .F., .T., .F.,, .F.,,, .T., "oBot[2]", .F. )
oForm:Activate( oForm:bLClicked, oForm:bMoved, oForm:bPainted, .T.,,, {|Self|Antiguedad(oQry:fecing,oGet[24])}, oForm:bRClicked,,, )

IF !lRta
   RETURN nil
ENDIF
base:consumo_desc := IF(base:consumo_por=1,0,base:consumo_desc)
oQry:oRow := base
BEGIN SEQUENCE WITH {|oErr| Break( oErr )}
  oApp:oServer:BeginTransaction()
  oQry:Save()
  IF UPPER(mfoto) <> UPPER(".\iconos\"+STRTRAN(STR(base:codigo,8)," ","0")+".jpg")
     __CopyFile( (mfoto), (".\iconos\"+STRTRAN(STR(base:codigo,8)," ","0")+".jpg") )
  ENDIF
  oApp:oServer:CommitTransaction()
RECOVER USING oError
    ValidaError(oError)
  LOOP
end
EXIT
ENDDO
oQryBrw:Refresh()
RETURN nil



STATIC FUNCTION cerrar (  )
LOCAL aNueva := {}, i, j
oQryBrw:End()
__mvXRelease( "oQryBrw" )


j := ASCAN(oApp:aVentanas,cVentana)
FOR i := 1 TO LEN(oApp:aVentanas)
    IF i <> j
       AADD(aNueva,oApp:aVentanas[i])
    ENDIF
next
oApp:aVentanas := ACLONE(aNueva)
RETURN .T.



STATIC FUNCTION Baja (  )
LOCAL mrta := .F., oError, nNum := oQryBrw:codigo
IF oQryBrw:codigo = 0
   RETURN nil
ENDIF

mrta := MsgNoYes("Seguro de eliminar"+CHR(10)+ "el registro código N°:"+STR(nNum),"Atencion")
IF !mrta
   RETURN nil
ENDIF
BEGIN SEQUENCE WITH {|oErr| Break( oErr )}

  oApp:oServer:BeginTransaction()
  oApp:oServer:Execute("DELETE FROM ge_"+oApp:cId+"emp_empleado WHERE codigo = " + ClipValue2Sql(oQryBrw:codigo))
  oApp:oServer:CommitTransaction()
  oQryBrw:Refresh(.F.)

RECOVER USING oError
    ValidaError(oError)
end
oBrw:Refresh()
RETURN nil




STATIC FUNCTION CambiaImagen(oImg,mfoto)
LOCAL cFile
cFile := cGetFile( "Foto empleado (*.jpg)|*.jpg", "Elija la foto",, ".\iconos", .F. )
IF EMPTY(cFile)
   RETURN nil
ENDIF
mfoto := cFile
oImg:LoadImage( , cFile )
oImg:Refresh()
RETURN nil


STATIC function ReporteE( oRep, oBrw )

   RptAddColumn( {{|| "Apellido y Nombre"}}, , {{|| oQryBrw:nombre}}, 35, {} ,, .F., ,, .F., .T.,, .F., .F.,,, .F.,, .F.,,, .F.,, {},, )
   RptAddColumn( {{|| "Legajo"}}, , {{|| oQryBrw:codigo}}, 08, {} ,, .F., ,, .F., .T.,, .F., .F.,,, .F.,, .F.,,, .F.,, {},, )
   RptAddColumn( {{|| "Observaciones"}}, , {{|| " "}}, 45, {} ,, .F., ,, .F., .T.,, .F., .F.,,, .F.,, .F.,,, .F.,, {},, )
   oRep:CellView()
return .T.




STATIC FUNCTION Tarjeta()

LOCAL oPrn, oFont1, oFont2, oFont3 , oFont4, oFont5, oFon, i, mbarra1, nRow := 0, nCol := 0, n, m, nRowStep, nColStep, mlegajo, mnombre

   oPrn := PrintBegin( "Tarjetas", .F., .T.,, .F., .F., )
      AddFontResource( "Bar25ifh.ttf" )
      oFont1 := TFont():New( "TAHOMA", 0, 14,,,,,,,,,,,,, oPrn, )
      oFont2 := TFont():New( "Arial", 0, 08,, .T.,,,,,,,,,,, oPrn, )
      oFont5 := TFont():New( "Bar 25i f HR", 110, 30,,,,,,,,,,,,, oPrn, )
      PageBegin()
         mlegajo := oQryBrw:codigo
         mnombre := oQryBrw:nombre
         mnombre := ALLTRIM(mnombre) + " - Legajo:"+STR(mlegajo,6)
         mbarra1 := STR(mlegajo,6)
         mbarra1 := STRTRAN(mbarra1," ","0")
         mbarra1 := CodigoBarra( mbarra1)

         oPrn:CmBox( .5, .5, 6, 10 )
         oPrn:PrintImage( 1, 7, "logo.jpg", 2.9, 2.9,,,,, "CM" )

         oPrn:SayText( 1, 1, ALLTRIM(oApp:nomb_emp), 5.9, 1, oFont1, "C",,, "CM" )

         oPrn:SayText( 2, 1, ALLTRIM(mnombre), 5.9, .8, oFont2,,,, "CM" )
         oPrn:CmSay( 3, 1, mbarra1,oFont5)

         oPrn:SayText( 5, 1, "TARJETA DE FICHADA", 8.7, 1, oFont2, "R",,, "CM" )
      PageEnd()
   PrintEnd()

   oFont1:End()
   oFont2:End()
   oFont5:End()
RETURN NIL

STATIC FUNCTION CodigoBarra( x )
LOCAL i, bar := {}, j := 0, bar1 := {}, cBarr := ""
   FOR i:= 33 to 122
       AADD(bar,CHR(i))
       AADD(bar1,STRTRAN(STR(j,2)," ","0"))
       j++
   next
   FOR i:= 161 to 170
       AADD(bar,CHR(i))
       AADD(bar1,STRTRAN(STR(j,2)," ","0"))
       j++
   next
FOR j := 1 TO LEN(x) STEP 2
    i := ASCAN(bar1,SUBSTR(x,j,2))
    cBarr := cBarr + bar[i]
next
RETURN "{"+cBarr+"}"




STATIC FUNCtION Liquida()

LOCAL oQry, oDlg1, oFont, acor:= ARRAY(4), nMes:=MONTH(DATE()), nAno := YEAR(DATE()), mrta:=.F., oGet:= ARRAY(6), oBot1, oBot2, oBot3, oBrwLiq, aLiqu, nSub := 0, dFecha := DATE(), oQryE , cDetalle := SPACE(30), oError







oApp:oServer:Execute("CREATE TEMPORARY TABLE IF NOT EXISTS `transi_liqemp` ("+ "`codemp` INT(6) DEFAULT 0 NOT NULL, "+ "`nombre` VARCHAR(40) , "+ "`sueldo` DECIMAL(12,2) DEFAULT 0 NOT NULL, "+ "`extras` DECIMAL(12,2) DEFAULT 0 NOT NULL, "+ "`total`  DECIMAL(12,2) DEFAULT 0 NOT NULL "+ ") ENGINE=INNODB DEFAULT CHARSET=utf8")
oApp:oServer:NextResult()
oApp:oServer:Execute("TRUNCATE transi_liqemp")
oApp:oServer:NextResult()


mrta := SiNoCancelar("Liquidación", "Indique a quien desea liquidar... "+ " Tenga en cuenta que si elige A Todos, solo se liquidará a los que estén activos...", {"A todos","A "+LEFT(oQryBrw:nombre,9),"Cancelar"})
IF mrta = nil
   RETURN nil
ENDIF
IF mrta

   oApp:oServer:Execute(" INSERT INTO transi_liqemp (SELECT codigo,nombre,sueldo,0 as extra,sueldo as total "+ " FROM ge_"+oApp:cId+"emp_empleado WHERE inactivo IS FALSE ORDER BY nombre)")
   ELSE

   oApp:oServer:Execute(" INSERT INTO transi_liqemp (SELECT codigo,nombre,sueldo,0 as extra,sueldo as total "+ " FROM ge_"+oApp:cId+"emp_empleado WHERE codigo = "+STR(oQryBrw:codigo)+" ORDER BY nombre)")
ENDIF
oQryE := oApp:oServer:Query("SELECT * FROM transi_liqemp")
oFont := TFont():New( "TAHOMA", 0, -11.5,,,,,,,,,,,,,, )
oDlg1 = TDialog():New( 03, 15, 30, 100, "Carga de Liquidación de Sueldos",,, .F.,,,,,, .F.,,,,,, .F.,, "oDlg1", nil, )
   acor := AcepCanc(oDlg1)
   TSay():New( 07, 05, {|| "Periodo:"}, oDlg1,,, .F., .T., .F., .T.,,, 50, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 22, 05, {|| "SubLiq.:"}, oDlg1,,, .F., .T., .F., .T.,,, 50, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 22, 75, {|| "Fecha Imputación:"}, oDlg1,,, .F., .T., .F., .T.,,, 50, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 37, 05, {|| "Detalle:"}, oDlg1,,, .F., .T., .F., .T.,,, 50, 20, .F., .F., .F., .F., .F., .F., .F.,, )

   oBot3 := TBtnBmp():New( 07, 175, 65, 30,,,,, {|Self|(oGet[05]:cText := "Aguinaldo",oGet[03]:cText := -1, CalculaAguinaldo(oQryE),oBrwLiq:Refresh())}, oDlg1,,, .F., .F., "&Calcular Aguinaldo según liquidaciones",,,, !.T., Upper("CENTER"), .T.,,, .F.,, !.F.,, .T., .F., .F.,,, .F. )


   oGet[01] := TGet():New( 05, 60, { | u | If( PCount()==0, nMes, nMes:= u ) }, oDlg1,,, "99", {||(nMes>0 .AND. nMes < 13)},,,, .F.,, .T.,, .F.,, .F., .T.,, .F., .F., .F.,, .F.,,,,,,, "oGet[01]", )
   oGet[02] := TGet():New( 05, 100, { | u | If( PCount()==0, nAno, nAno:= u ) }, oDlg1,,, "9999",,,,, .F.,, .T.,, .F.,, .F., .T.,, .F., .F., .F.,, .F.,,,,,,, "oGet[02]", )
   oGet[03] := TGet():New( 20, 60, { | u | If( PCount()==0, nSub, nSub:= u ) }, oDlg1,,, "99",,,,, .F.,, .T.,, .F.,, .F., .T.,, .F., .F., .F.,, .F.,,,,,,, "oGet[03]", )
   oGet[04] := TGet():New( 20, 130, { | u | If( PCount()==0, dFecha, dFecha:= u ) }, oDlg1,,, "@D",,,,, .F.,, .T.,, .F.,, .T., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[04]", )
   oGet[05] := TGet():New( 35, 60, { | u | If( PCount()==0, cDetalle, cDetalle:= u ) }, oDlg1,,, "@!",,,,, .F.,, .T.,, .F.,, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[05]", )





   oBrwLiq := XbrowseNew( oDlg1, 55, 05, 315, 100,, {"Empleado", "Sueldo","Extras","Total"},,,,,,,,,, .T., oQryE,, .F.,, .T.,, .F., .F. ,, {"nombre", "sueldo" ,"extras", "total"},,, .T., .F., .T., .T.,,,,, .F., .T., "oBrwLiq", )
   WITH OBJECT oBrwLiq
      :aCols[2]:nFooterType := 1
      :aCols[3]:nFooterType := 1
      :aCols[4]:nFooterType := 1
      :aCols[2]:cEditPicture := "999999999.99"
      :aCols[3]:cEditPicture := "999999999.99"
      :aCols[4]:cEditPicture := "999999999.99"
      :nMoveType := 1
      :aCols[2]:nEditType := 1
      :aCols[2]:bOnPostEdit := {|oCol, xVal, nKey | (CambiaValor(1,xval,oQryE,oBrwLiq,oGet[1]))}
      :aCols[3]:nEditType := 1
      :aCols[3]:bOnPostEdit := {|oCol, xVal, nKey | (CambiaValor(2,xval,oQryE,oBrwLiq,oGet[1]))}
      :MakeTotals()
      :CreateFromCode()
   END
   PintaBrw(oBrwLiq,0)


   oBot1 := TButton():New( acor[1], acor[2], "&Grabar", oDlg1, {|| ((mrta := .T.), oDlg1:End() )}, 30, 10,,, .F., .T., .F.,, .F.,,, .F., "oBot1", .F. )

   oBot2 := TButton():New( acor[3], acor[4], "&Cancelar", oDlg1, {|| ((mrta := .F.), oDlg1:End() )}, 30, 10,,, .F., .T., .F.,, .F.,,, .F., "oBot2", .F. )
oDlg1:Activate( oDlg1:bLClicked, oDlg1:bMoved, oDlg1:bPainted, .T.,,,, oDlg1:bRClicked,,, )
IF !mrta
   RETURN  NIL
ENDIF



IF oApp:oServer:Query("SELECT * FROM ge_"+oApp:cId+"emp_liqsueldo WHERE codemp IN (SELECT codemp FROM transi_liqemp) AND "+ " mes = " + ClipValue2Sql(nMes)+ " AND ano = " + ClipValue2Sql(nAno)+ " AND sub = "+ClipValue2Sql(nSub)):nRecCount > 0
   mrta := MsgNoYes("Existe ya esa liquidacion!"+chr(10)+"Desea reemplazarla por esta??","Atencion")
   IF !mrta
      RETURN nil
   ENDIF
ENDIF
BEGIN SEQUENCE WITH {|oErr| Break( oErr )}

  oApp:oServer:BeginTransaction()

  oApp:oServer:Execute("DELETE FROM ge_"+oApp:cId+"emp_liqsueldo WHERE codemp IN (SELECT codemp FROM transi_liqemp) AND mes = " + ClipValue2Sql(nMes)+ " AND ano = " + ClipValue2Sql(nAno)+ " AND sub = "+ClipValue2Sql(nSub))



  oApp:oServer:Execute("INSERT INTO ge_"+oApp:cId+"emp_liqsueldo (mes,ano,sub,codemp,fecha,sueldo,extras,total,observa,usuario) "+ " (SELECT "+ClipValue2Sql(nMes)+","+ ClipValue2Sql(nAno)+","+ClipValue2Sql(nSub)+",codemp,"+ ClipValue2Sql(dFecha)+",sueldo,extras,total,"+ClipValue2Sql(cDetalle)+"," + ClipValue2Sql(oApp:usuario)+ " FROM transi_liqemp)")
  oApp:oServer:CommitTransaction()
  MsgInfo("Proceso Terminado con Exito!","Atencion")
RECOVER USING oError
    ValidaError(oError)
end

RETURN nil



STATIC FUNCTION CambiaValor(n,nImporte,oQryE,oBrwLiq)
LOCAL base1 := oQryE:GetRowObj()
IF n = 1
   base1:sueldo:= nImporte
   base1:total := nImporte + base1:extras
   ELSE
   base1:extras:= nImporte
   base1:total := nImporte + base1:sueldo
ENDIF

oQryE:lAppend:= .F.
oQryE:oRow := base1
oQryE:Save()
oBrwLiq:Refresh(.T.)
oBrwLiq:MakeTotals(oBrwLiq:aCols[4])
RETURN nil


FUNCTION Antiguedad(dFecha,oGet)
LOCAL oQ
IF EMPTY(dFecha)
   oGet:cText := SPACE(20)
   ELSE

   oQ := oApp:oServer:Query("SELECT TIMESTAMPDIFF(YEAR, "+ClipValue2Sql(dfecha)+", CURDATE()) AS anios, "+ "TIMESTAMPDIFF(MONTH, "+ClipValue2Sql(dfecha)+", CURDATE()) % 12 AS meses")
   oGet:cText := STR(oQ:anios,2) + " Años "+STR(oQ:meses,2) + " Meses"
ENDIF
RETURN .T.


STATIC FUNCTION CalculaAguinaldo(oQry)

LOCAL oDlg1, oFont, acor:= ARRAY(4), dDesde,dHasta, mrta:=.F.,oGet:= ARRAY(2), oBot1, oBot2, aData, nCod , oQ, oBrw
IF MONTH(DATE())> 6
   dDesde := STR(YEAR(DATE()),4)+"/01"
   dHasta := STR(YEAR(DATE()),4)+"/06"
   ELSE
   dDesde := STR(YEAR(DATE())-1,4)+"/07"
   dHasta := STR(YEAR(DATE())-1,4)+"/12"
ENDIF

oFont := TFont():New( "TAHOMA", 0, -11.5,,,,,,,,,,,,,, )
oDlg1 = TDialog():New( 03, 15, 11, 60, "Calcular Aguinaldo Segun liquidaciones",,, .F.,,,,,, .F.,,,,,, .F.,, "oDlg1", nil, )
   acor := AcepCanc(oDlg1)
   TSay():New( 07, 05, {|| "Desde Período:"}, oDlg1,,, .F., .T., .F., .T.,,, 50, 20, .F., .F., .F., .F., .F., .F., .F.,, )
   TSay():New( 22, 05, {|| "Hasta Período:"}, oDlg1,,, .F., .T., .F., .T.,,, 50, 20, .F., .F., .F., .F., .F., .F., .F.,, )

   oGet[01] := TGet():New( 05, 60, { | u | If( PCount()==0, dDesde, dDesde:= u ) }, oDlg1,,, "9999/99",,,,, .F.,, .T.,, .F.,, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[01]", )
   oGet[02] := TGet():New( 20, 60, { | u | If( PCount()==0, dHasta, dHasta:= u ) }, oDlg1,,, "9999/99",,,,, .F.,, .T.,, .F.,, .F., .F.,, .F., .F., .F.,, .F.,,,,,,, "oGet[02]", )


   oBot1 := TButton():New( acor[1], acor[2], "&Calcular", oDlg1, {|| ((mrta := .T.), oDlg1:End() )}, 30, 10,,, .F., .T., .F.,, .F.,,, .F., "oBot1", .F. )

   oBot2 := TButton():New( acor[3], acor[4], "&Cancelar", oDlg1, {|| ((mrta := .F.), oDlg1:End() )}, 30, 10,,, .F., .T., .F.,, .F.,,, .F., "oBot2", .F. )
oDlg1:Activate( oDlg1:bLClicked, oDlg1:bMoved, oDlg1:bPainted, .T.,,,, oDlg1:bRClicked,,, )
IF !mrta
   RETURN nil
ENDIF








oQ := oApp:oServer:Query("SELECT res.codemp as codemp, COUNT(res.mes) as meses, MAX(res.sueldo) AS mejor,a.nombre as nombre, "+ "MAX(res.sueldo)*.5*COUNT(res.mes)/6 AS aguinaldo,COUNT(res.mes)/6 AS proporcional "+ " FROM ( "+ "SELECT ano,mes,codemp,MAX(sueldo) AS sueldo FROM ge_"+oApp:cId+"emp_liqsueldo "+ " WHERE CONCAT(ano,'/',LPAD(mes,2,'0')) >= "+ClipValue2Sql(dDesde)+ " AND CONCAT(ano,'/',LPAD(mes,2,'0')) <= "+ClipValue2Sql(dHasta)+ " GROUP BY codemp, ano, mes ) res "+ " LEFT JOIN ge_"+oApp:cId+"emp_empleado a ON a.codigo = res.codemp "+ " GROUP BY res.codemp")
mrta := .F.
oDlg1 = TDialog():New( 03, 15, 25, 100, "Resultado del Cálculo",,, .F.,,,,,, .F.,,,,,, .F.,, "oDlg1", nil, )
   acor := AcepCanc(oDlg1)




   oBrw := XbrowseNew( oDlg1, 05, 05, 315, 100,, {"Empleado","Mejor Liq.", "Aguinaldo","Meses Trab.","Indice"},,,,,,,,,, .T., oQ,, .F.,, .T.,, .F., .F. ,, {"nombre", "mejor","aguinaldo" ,"meses", "proporcional"},,, .T., .F., .T., .T.,,,,, .F., .T., "oBrw", )
   WITH OBJECT oBrw

      :aCols[2]:cEditPicture := "999999999.99"
      :aCols[3]:cEditPicture := "999999999.99"
      :aCols[4]:cEditPicture := "99"
      :aCols[5]:cEditPicture := "9.999"
      :MakeTotals()
      :CreateFromCode()
   END
   PintaBrw(oBrw,0)


   oBot1 := TButton():New( acor[1], acor[2], "&Pasar", oDlg1, {|| ((mrta := .T.), oDlg1:End() )}, 30, 10,,, .F., .T., .F.,, .F.,,, .F., "oBot1", .F. )

   oBot2 := TButton():New( acor[3], acor[4], "&Cancelar", oDlg1, {|| ((mrta := .F.), oDlg1:End() )}, 30, 10,,, .F., .T., .F.,, .F.,,, .F., "oBot2", .F. )
oDlg1:Activate( oDlg1:bLClicked, oDlg1:bMoved, oDlg1:bPainted, .T.,,,, oDlg1:bRClicked,,, )
IF !mrta
   RETURN nil
ENDIF
oQ:GoTop()
while !oQ:Eof()


   oApp:oServer:Execute("UPDATE transi_liqemp SET sueldo = "+ClipValue2Sql(oQ:aguinaldo)+","+ " total = " +ClipValue2Sql(oQ:aguinaldo)+" + extras "+ " WHERE codemp = "+ClipValue2Sql(oQ:codemp))
   oQ:Skip()
ENDDO
oQry:Refresh()
RETURN nil
